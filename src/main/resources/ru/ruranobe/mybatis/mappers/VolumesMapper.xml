<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ru.ruranobe.mybatis.mappers.VolumesMapper">

    <!--cache type="org.mybatis.caches.ehcache.EhcacheCache">
        <property name="timeToIdleSeconds" value="3600"/>
        <property name="timeToLiveSeconds" value="3600"/>
        <property name="maxEntriesLocalHeap" value="1000"/>
        <property name="maxEntriesLocalDisk" value="10000000"/>
        <property name="memoryStoreEvictionPolicy" value="LRU"/>
    </cache-->

    <select id="getVolumesCountByProjectId" parameterType="int" resultType="int">
        SELECT count(*) AS volumesCount
        FROM volumes
        WHERE project_id = #{projectId}
              AND volume_type = 'Ранобэ'
    </select>

    <select id="getVolumeByUrl" parameterType="String" resultMap="VolumeResult">
        SELECT *
        FROM volumes
        WHERE url = #{url}
    </select>

    <select id="getVolumeById" parameterType="int" resultMap="VolumeResult">
        SELECT *
        FROM volumes
        WHERE volume_id = #{volumeId}
    </select>

    <select id="getVolumeNextPrevByUrl" parameterType="String" resultMap="VolumeResult">
        SELECT
            v.*,
            prev_vol.name_short prev_name_short,
            prev_vol.url        prev_url,
            next_vol.name_short next_name_short,
            next_vol.url        next_url
        FROM (SELECT
                  v.*,
                  projects.title AS project_title,
                  (SELECT max(sequence_number)
                   FROM volumes
                   WHERE volumes.sequence_number &lt; v.sequence_number AND volumes.project_id = v.project_id
                   ORDER BY sequence_number DESC
                   LIMIT 1)      AS prev_sequence_number,
                  (SELECT min(sequence_number)
                   FROM volumes
                   WHERE volumes.sequence_number &gt; v.sequence_number AND volumes.project_id = v.project_id
                   ORDER BY sequence_number ASC
                   LIMIT 1)      AS next_sequence_number
              FROM volumes v
                  INNER JOIN projects USING (project_id)
              WHERE v.url = #{url}) v
            LEFT JOIN volumes prev_vol
                ON v.prev_sequence_number = prev_vol.sequence_number AND v.project_id = prev_vol.project_id
            LEFT JOIN volumes next_vol
                ON v.next_sequence_number = next_vol.sequence_number AND v.project_id = next_vol.project_id
    </select>

    <select id="getVolumeDownloadInfoByUrl" parameterType="String"
            resultType="ru.ruranobe.mybatis.entities.additional.VolumeDownloadInfo">
        SELECT
            sum(publish_date &lt;= now()) > 0 AS download,
            count(non_colored_image_id) > 0
            OR image_two IS NOT NULL
            OR image_three IS NOT NULL
            OR image_four IS NOT NULL         AS images,
            count(colored_image_id) > 0       AS colors
        FROM volumes v
            INNER JOIN chapters USING (volume_id)
            LEFT JOIN chapter_images USING (volume_id)
        WHERE v.url = #{url}
    </select>

    <select id="getVolumesByProjectId" parameterType="int" resultMap="VolumeResult">
        SELECT *
        FROM volumes
        WHERE project_id = #{projectId}
    </select>

    <select id="getProjectUpdateDate" parameterType="Integer" resultType="java.util.Date">
        SELECT max(show_time)
        FROM updates
        WHERE volume_id = #{volumeId}
        AND show_time &lt;= now()
    </select>

    <select id="getProjectEditDate" parameterType="Integer" resultType="java.util.Date">
        SELECT max(greatest(insertion_time, publish_date))
        FROM chapters
        INNER JOIN texts_history USING (chapter_id)
        WHERE volume_id = #{volumeId}
        AND publish_date &lt;= now()
    </select>

    <update id="updateVolume" parameterType="ru.ruranobe.mybatis.entities.tables.Volume">
        UPDATE volumes
        SET project_id         = #{projectId},
            image_one          = #{imageOne},
            image_two          = #{imageTwo},
            image_three        = #{imageThree},
            image_four         = #{imageFour},
            url                = #{url},
            name_file          = #{nameFile},
            name_title         = #{nameTitle},
            name_jp            = #{nameJp},
            name_en            = #{nameEn},
            name_ru            = #{nameRu},
            name_romaji        = #{nameRomaji},
            name_short         = #{nameShort},
            sequence_number    = #{sequenceNumber},
            author             = #{author},
            illustrator        = #{illustrator},
            original_design    = #{originalDesign},
            original_story     = #{originalStory},
            release_date       = #{releaseDate},
            isbn               = #{isbn},
            external_url       = #{externalUrl},
            volume_type        = #{volumeType},
            volume_status      = #{volumeStatus},
            volume_status_hint = #{volumeStatusHint},
            adult              = #{adult},
            annotation         = #{annotation},
        topic_id = #{topicId},
        requisite_id = #{requisiteId}
        WHERE volume_id = #{volumeId}
    </update>

    <update id="updateVolumeCovers" parameterType="ru.ruranobe.mybatis.entities.tables.Volume">
        UPDATE volumes
        SET
            image_one   = #{imageOne},
            image_two   = #{imageTwo},
            image_three = #{imageThree},
            image_four  = #{imageFour}
        WHERE volume_id = #{volumeId}
    </update>

    <update id="updateChaptersUrl" parameterType="ru.ruranobe.mybatis.entities.tables.Volume">
        UPDATE chapters
        SET url = concat(#{url}, '/', substring_index(url, '/', -1))
        WHERE volume_id = #{volumeId}
    </update>

    <insert id="insertVolume" parameterType="ru.ruranobe.mybatis.entities.tables.Volume" keyProperty="volumeId"
            useGeneratedKeys="true">
        INSERT INTO volumes
        SET project_id         = #{projectId},
            image_one          = #{imageOne},
            image_two          = #{imageTwo},
            image_three        = #{imageThree},
            image_four         = #{imageFour},
            url                = #{url},
            name_file          = #{nameFile},
            name_title         = #{nameTitle},
            name_jp            = #{nameJp},
            name_en            = #{nameEn},
            name_ru            = #{nameRu},
            name_romaji        = #{nameRomaji},
            name_short         = #{nameShort},
            sequence_number    = #{sequenceNumber},
            author             = #{author},
            illustrator        = #{illustrator},
            original_design    = #{originalDesign},
            original_story     = #{originalStory},
            release_date       = #{releaseDate},
            isbn               = #{isbn},
            external_url       = #{externalUrl},
            volume_type        = #{volumeType},
            volume_status      = #{volumeStatus},
            volume_status_hint = #{volumeStatusHint},
            adult              = #{adult},
            annotation         = #{annotation},
        topic_id = #{topicId},
        requisite_id = #{requisiteId}
    </insert>

    <delete id="deleteVolume" parameterType="int">
        DELETE FROM volumes
        WHERE volume_id = #{volumeId}
    </delete>

    <update id="resetVolumeTextCache" parameterType="int">
        UPDATE texts
            INNER JOIN chapters USING (text_id)
            INNER JOIN volumes USING (volume_id)
        SET
            text_html = NULL,
            contents  = NULL,
            footnotes = NULL
        WHERE volume_id = #{volumeId}
    </update>

    <resultMap type="ru.ruranobe.mybatis.entities.tables.Volume" id="VolumeResult">
        <id property="volumeId" column="volume_id"/>
        <result property="projectId" column="project_id"/>
        <result property="imageOne" column="image_one"/>
        <result property="imageTwo" column="image_two"/>
        <result property="imageThree" column="image_three"/>
        <result property="imageFour" column="image_four"/>
        <result property="url" column="url"/>
        <result property="nameFile" column="name_file"/>
        <result property="nameTitle" column="name_title"/>
        <result property="nameJp" column="name_jp"/>
        <result property="nameEn" column="name_en"/>
        <result property="nameRu" column="name_ru"/>
        <result property="nameRomaji" column="name_romaji"/>
        <result property="nameShort" column="name_short"/>
        <result property="subProjectName" column="project_title"/>
        <result property="sequenceNumber" column="sequence_number"/>
        <result property="author" column="author"/>
        <result property="illustrator" column="illustrator"/>
        <result property="originalDesign" column="original_design"/>
        <result property="originalStory" column="original_story"/>
        <result property="releaseDate" column="release_date"/>
        <result property="isbn" column="isbn"/>
        <result property="externalUrl" column="external_url"/>
        <result property="volumeType" column="volume_type"/>
        <result property="volumeStatus" column="volume_status"/>
        <result property="volumeStatusHint" column="volume_status_hint"/>
        <result property="adult" column="adult"/>
        <result property="annotation" column="annotation"/>
        <result property="prevUrl" column="prev_url"/>
        <result property="prevNameShort" column="prev_name_short"/>
        <result property="nextUrl" column="next_url"/>
        <result property="nextNameShort" column="next_name_short"/>
        <result property="topicId" column="topic_id"/>
        <result property="requisiteId" column="requisite_id"/>
    </resultMap>

</mapper>